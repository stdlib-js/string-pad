{
  "version": 3,
  "sources": ["../lib/validate.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.lpad] - string used to left pad\n* @param {string} [options.rpad] - string used to right pad\n* @param {boolean} [options.centerRight] - boolean indicating whether to center right in the event of a tie\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'lpad': 'a',\n*     'rpad': 'b'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'lpad' ) ) {\n\t\topts.lpad = options.lpad;\n\t\tif ( !isString( opts.lpad ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'lpad', opts.lpad ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'rpad' ) ) {\n\t\topts.rpad = options.rpad;\n\t\tif ( !isString( opts.rpad ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'rpad', opts.rpad ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'centerRight' ) ) {\n\t\topts.centerRight = options.centerRight;\n\t\tif ( !isBoolean( opts.centerRight ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'centerRight', opts.centerRight ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar repeat = require( '@stdlib/string-repeat' );\nvar format = require( '@stdlib/string-format' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar ceil = require( '@stdlib/math-base-special-ceil' );\nvar lpad = require( '@stdlib/string-left-pad' );\nvar rpad = require( '@stdlib/string-right-pad' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants-float64-max-safe-integer' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Pads a string such that the padded string has a length of `len`.\n*\n* @param {string} str - string to pad\n* @param {NonNegativeInteger} len - string length\n* @param {Options} [options] - function options\n* @param {string} [options.lpad=''] - string used to left pad\n* @param {string} [options.rpad=' '] - string used to right pad\n* @param {boolean} [options.centerRight=false] - boolean indicating whether to center right in the event of a tie\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} at least one padding must have a length greater than `0`\n* @returns {string} padded string\n*\n* @example\n* var str = pad( 'a', 5 );\n* // returns 'a    '\n*\n* @example\n* var str = pad( 'a', 10, {\n*     'lpad': 'b'\n* });\n* // returns 'bbbbbbbbba'\n*\n* @example\n* var str = pad( 'a', 12, {\n*     'rpad': 'b'\n* });\n* // returns 'abbbbbbbbbbb'\n*\n* @example\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c'\n* };\n* var str = pad( 'b', 10, opts );\n* // returns 'aaaabccccc'\n*\n* @example\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c',\n*     'centerRight': true\n* };\n* var str = pad( 'b', 10, opts );\n* // returns 'aaaaabcccc'\n*/\nfunction pad( str, len, options ) {\n\tvar nright;\n\tvar nleft;\n\tvar isodd;\n\tvar right;\n\tvar left;\n\tvar opts;\n\tvar err;\n\tvar tmp;\n\tvar n;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', len ) );\n\t}\n\tif ( len > FLOAT64_MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( format( 'invalid argument. Output string length exceeds maximum allowed string length. Value: `%u`.', len ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.lpad && opts.rpad ) {\n\t\tn = ( len-str.length ) / 2;\n\t\tif ( n === 0 ) {\n\t\t\treturn str;\n\t\t}\n\t\ttmp = floor( n );\n\t\tif ( tmp !== n ) {\n\t\t\tisodd = true;\n\t\t}\n\t\tif ( n < 0 ) {\n\t\t\tn = floor( abs( n ) );\n\t\t\tnleft = n;\n\t\t\tnright = str.length - n;\n\n\t\t\t// If |len-str.length| is an odd number, take away an additional character from one side...\n\t\t\tif ( isodd ) {\n\t\t\t\tif ( opts.centerRight ) {\n\t\t\t\t\tnright -= 1;\n\t\t\t\t} else {\n\t\t\t\t\tnleft += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str.substring( nleft, nright );\n\t\t}\n\t\tnleft = ceil( n / opts.lpad.length );\n\t\tleft = repeat( opts.lpad, nleft );\n\n\t\tnright = ceil( n / opts.rpad.length );\n\t\tright = repeat( opts.rpad, nright );\n\n\t\t// If (len-str.length) is an odd number, give one side one extra character...\n\t\tn = tmp;\n\t\tnleft = n;\n\t\tnright = n;\n\t\tif ( isodd ) {\n\t\t\tif ( opts.centerRight ) {\n\t\t\t\tnleft += 1;\n\t\t\t} else {\n\t\t\t\tnright += 1;\n\t\t\t}\n\t\t}\n\t\tleft = left.substring( 0, nleft );\n\t\tright = right.substring( 0, nright );\n\t\treturn left + str + right;\n\t}\n\tif ( opts.lpad ) {\n\t\ttmp = lpad( str, len, opts.lpad );\n\t\treturn tmp.substring( tmp.length-len );\n\t}\n\tif ( opts.rpad ) {\n\t\treturn ( rpad( str, len, opts.rpad ) ).substring( 0, len );\n\t}\n\tif ( opts.rpad === void 0 ) {\n\t\treturn ( rpad( str, len, ' ' ) ).substring( 0, len );\n\t}\n\tthrow new RangeError( format( 'invalid argument. At least one padding option must have a length greater than 0. Left padding: `%s`. Right padding: `%s`.', opts.lpad, opts.rpad ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pad;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Pad a string.\n*\n* @module @stdlib/string-pad\n*\n* @example\n* var pad = require( '@stdlib/string-pad' );\n*\n* var str = pad( 'a', 5 );\n* // returns 'a    '\n*\n* str = pad( 'a', 10, {\n*     'lpad': 'b'\n* });\n* // returns 'bbbbbbbbba'\n*\n* str = pad( 'a', 12, {\n*     'rpad': 'b'\n* });\n* // returns 'abbbbbbbbbbb'\n*\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c'\n* };\n* str = pad( 'b', 10, opts );\n* // returns 'aaaabccccc'\n*\n* opts = {\n*     'lpad': 'a',\n*     'rpad': 'c',\n*     'centerRight': true\n* };\n* str = pad( 'b', 10, opts );\n* // returns 'aaaaabcccc'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_validate", "__commonJSMin", "exports", "module", "isPlainObject", "hasOwnProp", "isString", "isBoolean", "format", "validate", "opts", "options", "require_main", "__commonJSMin", "exports", "module", "isNonNegativeInteger", "isString", "repeat", "format", "floor", "ceil", "lpad", "rpad", "abs", "FLOAT64_MAX_SAFE_INTEGER", "validate", "pad", "str", "len", "options", "nright", "nleft", "isodd", "right", "left", "opts", "err", "tmp", "n", "main"]
}
