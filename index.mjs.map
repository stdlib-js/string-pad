{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/pad.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {string} [options.lpad] - string used to left pad\n* @param {string} [options.rpad] - string used to right pad\n* @param {boolean} [options.centerRight] - boolean indicating whether to center right in the event of a tie\n* @returns {(null|Error)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'lpad': 'a',\n*     'rpad': 'b'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isPlainObject( options ) ) {\n\t\treturn new TypeError( format( '0hL2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'lpad' ) ) {\n\t\topts.lpad = options.lpad;\n\t\tif ( !isString( opts.lpad ) ) {\n\t\t\treturn new TypeError( format( '0hL2i', 'lpad', opts.lpad ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'rpad' ) ) {\n\t\topts.rpad = options.rpad;\n\t\tif ( !isString( opts.rpad ) ) {\n\t\t\treturn new TypeError( format( '0hL2i', 'rpad', opts.rpad ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'centerRight' ) ) {\n\t\topts.centerRight = options.centerRight;\n\t\tif ( !isBoolean( opts.centerRight ) ) {\n\t\t\treturn new TypeError( format( '0hL30', 'centerRight', opts.centerRight ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar repeat = require( '@stdlib/string-repeat' );\nvar format = require( '@stdlib/error-tools-fmtprodmsg' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar ceil = require( '@stdlib/math-base-special-ceil' );\nvar lpad = require( '@stdlib/string-left-pad' );\nvar rpad = require( '@stdlib/string-right-pad' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar FLOAT64_MAX_SAFE_INTEGER = require( '@stdlib/constants-float64-max-safe-integer' );\nvar validate = require( './validate.js' );\n\n\n// MAIN //\n\n/**\n* Pads a string such that the padded string has a length of `len`.\n*\n* @param {string} str - string to pad\n* @param {NonNegativeInteger} len - string length\n* @param {Options} [options] - function options\n* @param {string} [options.lpad=''] - string used to left pad\n* @param {string} [options.rpad=' '] - string used to right pad\n* @param {boolean} [options.centerRight=false] - boolean indicating whether to center right in the event of a tie\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} at least one padding must have a length greater than `0`\n* @returns {string} padded string\n*\n* @example\n* var str = pad( 'a', 5 );\n* // returns 'a    '\n*\n* @example\n* var str = pad( 'a', 10, {\n*     'lpad': 'b'\n* });\n* // returns 'bbbbbbbbba'\n*\n* @example\n* var str = pad( 'a', 12, {\n*     'rpad': 'b'\n* });\n* // returns 'abbbbbbbbbbb'\n*\n* @example\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c'\n* };\n* var str = pad( 'b', 10, opts );\n* // returns 'aaaabccccc'\n*\n* @example\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c',\n*     'centerRight': true\n* };\n* var str = pad( 'b', 10, opts );\n* // returns 'aaaaabcccc'\n*/\nfunction pad( str, len, options ) {\n\tvar nright;\n\tvar nleft;\n\tvar isodd;\n\tvar right;\n\tvar left;\n\tvar opts;\n\tvar err;\n\tvar tmp;\n\tvar n;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '0hL3R', str ) );\n\t}\n\tif ( !isNonNegativeInteger( len ) ) {\n\t\tthrow new TypeError( format( '0hL3k', len ) );\n\t}\n\tif ( len > FLOAT64_MAX_SAFE_INTEGER ) {\n\t\tthrow new RangeError( format( '0hLB7', len ) );\n\t}\n\topts = {};\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( opts.lpad && opts.rpad ) {\n\t\tn = ( len-str.length ) / 2;\n\t\tif ( n === 0 ) {\n\t\t\treturn str;\n\t\t}\n\t\ttmp = floor( n );\n\t\tif ( tmp !== n ) {\n\t\t\tisodd = true;\n\t\t}\n\t\tif ( n < 0 ) {\n\t\t\tn = floor( abs( n ) );\n\t\t\tnleft = n;\n\t\t\tnright = str.length - n;\n\n\t\t\t// If |len-str.length| is an odd number, take away an additional character from one side...\n\t\t\tif ( isodd ) {\n\t\t\t\tif ( opts.centerRight ) {\n\t\t\t\t\tnright -= 1;\n\t\t\t\t} else {\n\t\t\t\t\tnleft += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str.substring( nleft, nright );\n\t\t}\n\t\tnleft = ceil( n / opts.lpad.length );\n\t\tleft = repeat( opts.lpad, nleft );\n\n\t\tnright = ceil( n / opts.rpad.length );\n\t\tright = repeat( opts.rpad, nright );\n\n\t\t// If (len-str.length) is an odd number, give one side one extra character...\n\t\tn = tmp;\n\t\tnleft = n;\n\t\tnright = n;\n\t\tif ( isodd ) {\n\t\t\tif ( opts.centerRight ) {\n\t\t\t\tnleft += 1;\n\t\t\t} else {\n\t\t\t\tnright += 1;\n\t\t\t}\n\t\t}\n\t\tleft = left.substring( 0, nleft );\n\t\tright = right.substring( 0, nright );\n\t\treturn left + str + right;\n\t}\n\tif ( opts.lpad ) {\n\t\ttmp = lpad( str, len, opts.lpad );\n\t\treturn tmp.substring( tmp.length-len );\n\t}\n\tif ( opts.rpad ) {\n\t\treturn ( rpad( str, len, opts.rpad ) ).substring( 0, len );\n\t}\n\tif ( opts.rpad === void 0 ) {\n\t\treturn ( rpad( str, len, ' ' ) ).substring( 0, len );\n\t}\n\tthrow new RangeError( format( '0hLB9', opts.lpad, opts.rpad ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = pad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Pad a string.\n*\n* @module @stdlib/string-pad\n*\n* @example\n* var pad = require( '@stdlib/string-pad' );\n*\n* var str = pad( 'a', 5 );\n* // returns 'a    '\n*\n* str = pad( 'a', 10, {\n*     'lpad': 'b'\n* });\n* // returns 'bbbbbbbbba'\n*\n* str = pad( 'a', 12, {\n*     'rpad': 'b'\n* });\n* // returns 'abbbbbbbbbbb'\n*\n* var opts = {\n*     'lpad': 'a',\n*     'rpad': 'c'\n* };\n* str = pad( 'b', 10, opts );\n* // returns 'aaaabccccc'\n*\n* opts = {\n*     'lpad': 'a',\n*     'rpad': 'c',\n*     'centerRight': true\n* };\n* str = pad( 'b', 10, opts );\n* // returns 'aaaaabcccc'\n*/\n\n// MODULES //\n\nvar pad = require( './pad.js' );\n\n\n// EXPORTS //\n\nmodule.exports = pad;\n"],"names":["isPlainObject","require$$0","hasOwnProp","require$$1","isString","require$$2","isPrimitive","isBoolean","require$$3","format","require$$4","validate_1","opts","options","lpad","TypeError","rpad","centerRight","isNonNegativeInteger","repeat","floor","ceil","require$$5","require$$6","require$$7","abs","require$$8","FLOAT64_MAX_SAFE_INTEGER","require$$9","validate","require$$10","lib","str","len","nright","nleft","isodd","right","left","err","tmp","n","RangeError","arguments","length","substring"],"mappings":";;qoCAsBA,IAAIA,EAAgBC,EAChBC,EAAaC,EACbC,EAAWC,EAAsCC,YACjDC,EAAYC,EAAuCF,YACnDG,EAASC,EAuDb,IAAAC,EA5BA,SAAmBC,EAAMC,GACxB,OAAMb,EAAea,GAGhBX,EAAYW,EAAS,UACzBD,EAAKE,KAAOD,EAAQC,MACdV,EAAUQ,EAAKE,OACb,IAAIC,UAAWN,EAAQ,QAAS,OAAQG,EAAKE,OAGjDZ,EAAYW,EAAS,UACzBD,EAAKI,KAAOH,EAAQG,MACdZ,EAAUQ,EAAKI,OACb,IAAID,UAAWN,EAAQ,QAAS,OAAQG,EAAKI,OAGjDd,EAAYW,EAAS,iBACzBD,EAAKK,YAAcJ,EAAQI,aACrBV,EAAWK,EAAKK,cACd,IAAIF,UAAWN,EAAQ,QAAS,cAAeG,EAAKK,cAGtD,KApBC,IAAIF,UAAWN,EAAQ,QAASI,KCjCrCK,EAAuBjB,EAAmDK,YAC1EF,EAAWD,EAAsCG,YACjDa,EAASd,EACTI,EAASD,EACTY,EAAQV,EACRW,EAAOC,EACPR,EAAOS,EACPP,EAAOQ,EACPC,EAAMC,EACNC,EAA2BC,EAC3BC,EAAWC,EA6If,IC7GAC,EDsBA,SAAcC,EAAKC,EAAKpB,GACvB,IAAIqB,EACAC,EACAC,EACAC,EACAC,EACA1B,EACA2B,EACAC,EACAC,EACJ,IAAMrC,EAAU4B,GACf,MAAM,IAAIjB,UAAWN,EAAQ,QAASuB,IAEvC,IAAMd,EAAsBe,GAC3B,MAAM,IAAIlB,UAAWN,EAAQ,QAASwB,IAEvC,GAAKA,EAAMN,EACV,MAAM,IAAIe,WAAYjC,EAAQ,QAASwB,IAGxC,GADArB,EAAO,GACF+B,UAAUC,OAAS,IACvBL,EAAMV,EAAUjB,EAAMC,IAErB,MAAM0B,EAGR,GAAK3B,EAAKE,MAAQF,EAAKI,KAEtB,OAAW,KADXyB,GAAMR,EAAID,EAAIY,QAAW,GAEjBZ,IAERQ,EAAMpB,EAAOqB,MACAA,IACZL,GAAQ,GAEJK,EAAI,GAERN,EADAM,EAAIrB,EAAOK,EAAKgB,IAEhBP,EAASF,EAAIY,OAASH,EAGjBL,IACCxB,EAAKK,YACTiB,GAAU,EAEVC,GAAS,GAGJH,EAAIa,UAAWV,EAAOD,KAE9BC,EAAQd,EAAMoB,EAAI7B,EAAKE,KAAK8B,QAC5BN,EAAOnB,EAAQP,EAAKE,KAAMqB,GAE1BD,EAASb,EAAMoB,EAAI7B,EAAKI,KAAK4B,QAC7BP,EAAQlB,EAAQP,EAAKI,KAAMkB,GAI3BC,EADAM,EAAID,EAEJN,EAASO,EACJL,IACCxB,EAAKK,YACTkB,GAAS,EAETD,GAAU,IAGZI,EAAOA,EAAKO,UAAW,EAAGV,IAEZH,GADdK,EAAQA,EAAMQ,UAAW,EAAGX,MAG7B,GAAKtB,EAAKE,KAET,OADA0B,EAAM1B,EAAMkB,EAAKC,EAAKrB,EAAKE,OAChB+B,UAAWL,EAAII,OAAOX,GAElC,GAAKrB,EAAKI,KACT,OAASA,EAAMgB,EAAKC,EAAKrB,EAAKI,MAAS6B,UAAW,EAAGZ,GAEtD,QAAmB,IAAdrB,EAAKI,KACT,OAASA,EAAMgB,EAAKC,EAAK,KAAQY,UAAW,EAAGZ,GAEhD,MAAM,IAAIS,WAAYjC,EAAQ,QAASG,EAAKE,KAAMF,EAAKI"}